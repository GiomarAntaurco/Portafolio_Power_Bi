expression 'Errores en Datos' =
		let
		Origen = Datos,
		  #"Errores de coincidencia detectados" = let
		    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Origen, Table.ColumnsOfType(Origen, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),
		    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),
		    fieldNames = Record.FieldNames(recordTypeFields),
		    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),
		    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = "El tipo del valor no coincide con el tipo de la columna.", Detail = v], fieldTypes{i}})
		in
		    Table.TransformColumns(Origen, pairs),
		  #"Índice agregado" = Table.AddIndexColumn(#"Errores de coincidencia detectados", "Número de fila" ,1),
		  #"Conservar errores" = Table.SelectRowsWithErrors(#"Índice agregado", {"Nombres", "Apellidos", "Email_Personal", "Quantity", "Price Tier", "Group", "Total Paid", "Fees Paid", "Eventbrite Fees", "Eventbrite Payment Processing", "Attendee Status", "Home Address 1", "Home Address 2", "Home City", "Home State", "Home Zip", "Home Country", "Telefono", "Genero", "DNI", "Ciudad_Origen", "Email_Corporativo", "Educacion", "Tema Interes", "Cargo", "Empresa", "Icono", "Sector", "Column29", "Seguros", "Bachiller"}),
		  #"Columnas reordenadas" = Table.ReorderColumns(#"Conservar errores", {"Número de fila", "Nombres", "Apellidos", "Email_Personal", "Quantity", "Price Tier", "Group", "Total Paid", "Fees Paid", "Eventbrite Fees", "Eventbrite Payment Processing", "Attendee Status", "Home Address 1", "Home Address 2", "Home City", "Home State", "Home Zip", "Home Country", "Telefono", "Genero", "DNI", "Ciudad_Origen", "Email_Corporativo", "Educacion", "Tema Interes", "Cargo", "Empresa", "Icono", "Sector", "Column29", "Seguros", "Bachiller"}),
		    #"Filas filtradas" = Table.SelectRows(#"Columnas reordenadas", each [Price Tier] <> null and [Price Tier] <> "")
		in
		  #"Filas filtradas"
	lineageTag: 1389a9e2-e651-44a6-bc38-8a02e35a2360
	queryGroup: 'Errores en las consultas: 11/02/2025 16:39:02'

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Table

